name : Dev Build, Test and Publish

on:
  push:
    branches: [development]

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_ZONE: europe-west3-a
  REPOSITORY_NAME: cheminformatics-python-microservice-dev
  APP_IMAGE: chem-py-microservice-dev

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10"]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8
    - name: Analysing the code with pylint
      run: |
        flake8 --ignore E501,W503 $(git ls-files '*.py')

  setup-build-publish-dev:
    name: Build & publish to dev registry
    if: github.ref == 'refs/heads/development'
    runs-on: ubuntu-latest
    needs: test
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    # Setup gcloud CLI
    - uses: google-github-actions/setup-gcloud@94337306dda8180d967a56932ceb4ddcf01edae7
      with:
        service_account_key: ${{ secrets.GKE_SA_KEY }}
        project_id: ${{ secrets.GKE_PROJECT }}

    # Configure docker to use the gcloud command-line tool as a credential helper
    - run: |-
        gcloud auth configure-docker europe-west3-docker.pkg.dev

    # Build the Docker image
    - name: Build App Image
      run: |-
        docker build \
          --tag "europe-west3-docker.pkg.dev/$PROJECT_ID/$REPOSITORY_NAME/$APP_IMAGE:latest" \
          --build-arg GITHUB_SHA="$GITHUB_SHA" \
          --build-arg GITHUB_REF="$GITHUB_REF" \
          .
    # Push the Docker image to Google Container Registry
    - name: Publish App Image to GCR
      run: |-
        docker push "europe-west3-docker.pkg.dev/$PROJECT_ID/$REPOSITORY_NAME/$APP_IMAGE:latest"