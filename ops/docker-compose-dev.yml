version: "3.9"

services:
  traefik:
    image: traefik:v3.1.5
    container_name: traefik-dev
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    restart: unless-stopped
    networks:
      - cm_network_dev

  api:
    image: nfdi4chem/cheminformatics-microservice:api-dev
    environment:
      HOMEPAGE_URL: "/latest/docs"
      RELEASE_VERSION: dev-latest
    pull_policy: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`dev.api.naturalproducts.net`) && PathPrefix(`/latest`)"
      - "traefik.http.routers.api.entrypoints=web"
      - "traefik.http.services.api.loadbalancer.server.port=80"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/latest/chem/health"]
      interval: 1m
      timeout: 10s
      retries: 10
      start_period: 40s
    restart: unless-stopped
    networks:
      - cm_network_dev

  web:
    image: nfdi4chem/cheminformatics-microservice:app-dev
    pull_policy: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.web.rule=Host(`dev.api.naturalproducts.net`)"
      - "traefik.http.routers.web.entrypoints=web"
      - "traefik.http.services.web.loadbalancer.server.port=80"
    depends_on:
      - api
    restart: unless-stopped
    networks:
      - cm_network_dev

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus-dev
    ports:
      - "9090:9090"
    volumes:
      - ./../prometheus_data/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data_dev:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    restart: unless-stopped
    networks:
      - cm_network_dev

  grafana:
    image: grafana/grafana:latest
    container_name: grafana-dev
    user: "472"
    ports:
      - "3000:3000"
    volumes:
      - grafana_data_dev:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin_dev}
      - GF_USERS_ALLOW_SIGN_UP=false
    restart: unless-stopped
    depends_on:
      - prometheus
    networks:
      - cm_network_dev

volumes:
  prometheus_data_dev:
    driver: local
  grafana_data_dev:
    driver: local

networks:
  cm_network_dev:
    name: cm_network_dev
    driver: bridge

# Note: The above docker-compose file is for dev environment.